[{{ item.name }}]

; Unix user/group of processes
user = {{ item.user|default('www') }}
group = {{ item.group|default('www') }}
listen = {{ item.listen|default('127.0.0.1:9000') }}
listen.backlog = {{ item.listen_backlog|default('-1') }}

; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.
; Default Value: any
{% if item.allowed_clients is defined %}
listen.allowed_clients = {{ item.allowed_clients|join (', ') }}
{% endif %}

pm = {{ item.pm|default('ondemand') }}

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'
pm.max_children = {{ item.max_children|default('5') }}

; The number of child processes created on startup.
; Note: Used only when pm is set to 'dynamic'
pm.start_servers = {{ item.start_servers|default('2') }}

; The desired minimum number of idle server processes.
; Note: Used only when pm is set to 'dynamic'
pm.min_spare_servers = {{ item.min_spare_servers|default('1') }}

; The desired maximum number of idle server processes.
; Note: Used only when pm is set to 'dynamic'
pm.max_spare_servers = {{ item.max_spare_servers|default('3') }}

; The number of seconds after which an idle process will be killed.
; Note: Used only when pm is set to 'ondemand'
; Default Value: 10s
pm.process_idle_timeout = {{ item.process_idle_timeout|default('300') }}s;

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries. For
; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
; Default Value: 0
pm.max_requests = {{ item.max_requests|default('0') }}

pm.status_path = {{ item.status_path|default('/status') }}

ping.path = {{ item.ping|default('/ping') }}

{% if item.access_log is defined %}
; The access log file
; Default: not set
access.log = {{ item.access_log }}
{% endif %}

; Default: "%R - %u %t \"%m %r\" %s"
;access.format = "%R - %u %t \"%m %r%Q%q\" %s %f %{mili}d %{kilo}M %C%%"

{% if item.slowlog is defined %}
; The log file for slow requests
; Default Value: not set
; Note: slowlog is mandatory if request_slowlog_timeout is set
slowlog = {{ item.slowlog }}
{% endif %}

{% if item.request_slowlog_timeout is defined %}
; The timeout for serving a single request after which a PHP backtrace will be
; dumped to the 'slowlog' file. A value of '0s' means 'off'.
; Available units: s(econds)(default), m(inutes), h(ours), or d(ays)
; Default Value: 0
request_slowlog_timeout = {{ item.request_slowlog_timeout }}
{% endif %}

; The timeout for serving a single request after which the worker process will
; be killed. This option should be used when the 'max_execution_time' ini option
; does not stop script execution for some reason. A value of '0' means 'off'.
; Available units: s(econds)(default), m(inutes), h(ours), or d(ays)
; Default Value: 0
;request_terminate_timeout = 0

; Set open file descriptor rlimit.
; Default Value: system defined value
;rlimit_files = 1024

; Set max core size rlimit.
; Possible Values: 'unlimited' or an integer greater or equal to 0
; Default Value: system defined value
;rlimit_core = 0

; Chdir to this directory at the start.
; Note: relative path can be used.
; Default Value: current directory or / when chroot
;chdir = /var/www

; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
; Note: on highloaded environement, this can cause some delay in the page
; process time (several ms).
; Default Value: no
;catch_workers_output = yes

; Clear environment in FPM workers
; Prevents arbitrary environment variables from reaching FPM worker processes
; by clearing the environment in workers before env vars specified in this
; pool configuration are added.
; Setting to "no" will make all environment variables available to PHP code
; via getenv(), $_ENV and $_SERVER.
; Default Value: yes
;clear_env = no

; Note: set an empty value to allow all extensions.
; Default Value: .php
;security.limit_extensions = .php .php3 .php4 .php5 .php7

{% if item.php_settings is defined %}
{% for php_setting in item.php_settings %}
php_{{ php_setting.type }}[{{ php_setting.key }}] = {{ php_setting.value }}
{% endfor %}
{% endif %}
